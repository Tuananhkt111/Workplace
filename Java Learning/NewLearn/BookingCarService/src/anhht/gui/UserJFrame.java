/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package anhht.gui;

import anht.daos.CustomerDAO;
import anht.daos.CarCategoryDAO;
import anht.daos.CarDAO;
import anht.daos.TravelPriceDAO;
import anht.daos.TravelTransactionDAO;
import anht.dtos.CustomerDTO;
import anht.dtos.CarCategoryDTO;
import anht.dtos.CarDTO;
import anht.dtos.TravelPriceDTO;
import anht.dtos.TravelTransactionDTO;
import java.awt.CardLayout;
import java.awt.Color;
import java.sql.Timestamp;
import java.util.Date;
import java.util.Calendar;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JSpinner.DefaultEditor;
import javax.swing.SpinnerDateModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;
import myutil.MyUtil;

/**
 *
 * @author tuana
 */
public class UserJFrame extends javax.swing.JFrame {

    private String username;
    private DefaultTableModel tblModelTravelPrice = null;
    private DefaultTableModel tblModelCar = null;
    private DefaultTableModel tblModelTransaction = null;

    /**
     * Creates new form UserJFrame
     */
    public UserJFrame() {
        initComponents();
    }

    public UserJFrame(String key) {
        this.username = key;
        initComponents();
        btnBook.setVisible(true);
        tblModelTravelPrice = (DefaultTableModel) tblViewTravelPrice.getModel();
        tblModelCar = (DefaultTableModel) tblViewCar.getModel();
        tblModelTransaction = (DefaultTableModel) tblViewTransaction.getModel();
        btnSearchTravel.doClick();
    }

    private void loadUserInfo(String key) {
        CustomerDAO accDAO = new CustomerDAO();
        CustomerDTO accDTO = accDAO.findByPrimaryKey(key);
        if (accDTO != null) {
            txtUsername.setText(accDTO.getId());
            txtPass.setText(accDTO.getPassword());
            txtName.setText(accDTO.getName());
            if (accDTO.isSex()) {
                rdMale.setSelected(true);
            } else {
                rdFemale.setSelected(true);
            }
            txtAge.setText(Integer.toString(accDTO.getAge()));
            txtPhone.setText(accDTO.getPhone());
        } else {
            JOptionPane.showMessageDialog(null, "Cannot load user information", "System warning", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void loadTransaction(String key) {
        TravelTransactionDAO ttDAO = new TravelTransactionDAO();
        List<TravelTransactionDTO> result = ttDAO.findByAccID(key);
        if (!result.isEmpty()) {
            showTransaction(result);
        } else {
            JOptionPane.showMessageDialog(null, "Not found any transactions", "System warning", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void showTravelPrice(List<TravelPriceDTO> list) {
        tblModelTravelPrice.setRowCount(0);
        for (TravelPriceDTO travelPriceDTO : list) {
            tblModelTravelPrice.addRow(travelPriceDTO.toVector());
        }
    }

    private void showTransaction(List<TravelTransactionDTO> list) {
        tblModelTransaction.setRowCount(0);
        for (TravelTransactionDTO travelTransactionDTO : list) {
            tblModelTransaction.addRow(travelTransactionDTO.toVector());
        }
    }

    private void showCar(List<CarDTO> list) {
        tblModelCar.setRowCount(0);
        for (CarDTO carDTO : list) {
            tblModelCar.addRow(carDTO.toVector2());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupSex = new javax.swing.ButtonGroup();
        groupSeats = new javax.swing.ButtonGroup();
        toolbar = new javax.swing.JToolBar();
        btnBookCar = new javax.swing.JButton();
        btnTransaction = new javax.swing.JButton();
        btnProfile = new javax.swing.JButton();
        btnSignOut = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        pnlAvatar = new javax.swing.JPanel();
        pnlView = new javax.swing.JPanel();
        pnlBookCar = new javax.swing.JPanel();
        pnlChooseTravel = new javax.swing.JPanel();
        txtSearchTravel = new javax.swing.JTextField();
        btnSearchTravel = new javax.swing.JButton();
        rd16Seats = new javax.swing.JRadioButton();
        rd7Seats = new javax.swing.JRadioButton();
        rd4Seats = new javax.swing.JRadioButton();
        rdAll = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblViewTravelPrice = new javax.swing.JTable();
        btnResetTravel = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        pnlChooseCar = new javax.swing.JPanel();
        txtSearchCar = new javax.swing.JTextField();
        btnSearchCar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblViewCar = new javax.swing.JTable();
        btnBook = new javax.swing.JButton();
        lblStartTime = new javax.swing.JLabel();
        lblDuration = new javax.swing.JLabel();
        txtPrice = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnResetCar = new javax.swing.JButton();
        lblSeats = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        spStartTime = new javax.swing.JSpinner();
        spDuration = new javax.swing.JSpinner();
        lblPrice = new javax.swing.JLabel();
        pnlTransaction = new javax.swing.JPanel();
        lblTransaction = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblViewTransaction = new javax.swing.JTable();
        btnRemove = new javax.swing.JButton();
        pnlProfile = new javax.swing.JPanel();
        pnlUserInfo = new javax.swing.JPanel();
        lblUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblPass = new javax.swing.JLabel();
        txtPass = new javax.swing.JPasswordField();
        lblSex = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        rdMale = new javax.swing.JRadioButton();
        rdFemale = new javax.swing.JRadioButton();
        lblPhone = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        msgUsername = new javax.swing.JLabel();
        msgPass = new javax.swing.JLabel();
        msgName = new javax.swing.JLabel();
        msgAge = new javax.swing.JLabel();
        msgPhone = new javax.swing.JLabel();
        msgPass2 = new javax.swing.JLabel();
        lblUserInfo = new javax.swing.JLabel();
        pnlUpdate = new javax.swing.JPanel();
        pnlBtnEdit = new javax.swing.JPanel();
        btnEdit = new javax.swing.JButton();
        pnlBtnUpdate = new javax.swing.JPanel();
        btnCancel = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        toolbar.setOrientation(javax.swing.SwingConstants.VERTICAL);
        toolbar.setRollover(true);
        toolbar.setMargin(null);

        btnBookCar.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnBookCar.setText("BookCar");
        btnBookCar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBookCar.setFocusable(false);
        btnBookCar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBookCar.setPreferredSize(new java.awt.Dimension(220, 100));
        btnBookCar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnBookCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookCarActionPerformed(evt);
            }
        });
        toolbar.add(btnBookCar);

        btnTransaction.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnTransaction.setText("Transaction");
        btnTransaction.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTransaction.setFocusable(false);
        btnTransaction.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnTransaction.setPreferredSize(new java.awt.Dimension(220, 100));
        btnTransaction.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnTransaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransactionActionPerformed(evt);
            }
        });
        toolbar.add(btnTransaction);

        btnProfile.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnProfile.setText("Profile");
        btnProfile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnProfile.setFocusable(false);
        btnProfile.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnProfile.setPreferredSize(new java.awt.Dimension(220, 100));
        btnProfile.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProfileActionPerformed(evt);
            }
        });
        toolbar.add(btnProfile);

        btnSignOut.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnSignOut.setText("Sign Out");
        btnSignOut.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSignOut.setFocusable(false);
        btnSignOut.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSignOut.setPreferredSize(new java.awt.Dimension(220, 100));
        btnSignOut.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSignOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignOutActionPerformed(evt);
            }
        });
        toolbar.add(btnSignOut);

        btnExit.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnExit.setText("Exit");
        btnExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExit.setFocusable(false);
        btnExit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExit.setPreferredSize(new java.awt.Dimension(220, 100));
        btnExit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        toolbar.add(btnExit);

        getContentPane().add(toolbar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 230, 510));

        javax.swing.GroupLayout pnlAvatarLayout = new javax.swing.GroupLayout(pnlAvatar);
        pnlAvatar.setLayout(pnlAvatarLayout);
        pnlAvatarLayout.setHorizontalGroup(
            pnlAvatarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 230, Short.MAX_VALUE)
        );
        pnlAvatarLayout.setVerticalGroup(
            pnlAvatarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 290, Short.MAX_VALUE)
        );

        getContentPane().add(pnlAvatar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 290));

        pnlView.setPreferredSize(new java.awt.Dimension(1090, 710));
        pnlView.setLayout(new java.awt.CardLayout());

        pnlBookCar.setPreferredSize(new java.awt.Dimension(680, 80));
        pnlBookCar.setLayout(new java.awt.CardLayout());

        pnlChooseTravel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtSearchTravel.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        pnlChooseTravel.add(txtSearchTravel, new org.netbeans.lib.awtextra.AbsoluteConstraints(576, 79, 233, -1));

        btnSearchTravel.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        btnSearchTravel.setText("Search");
        btnSearchTravel.setActionCommand("btnSearch");
        btnSearchTravel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchTravelActionPerformed(evt);
            }
        });
        pnlChooseTravel.add(btnSearchTravel, new org.netbeans.lib.awtextra.AbsoluteConstraints(827, 78, -1, -1));

        groupSeats.add(rd16Seats);
        rd16Seats.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        rd16Seats.setText("16 Seats");
        pnlChooseTravel.add(rd16Seats, new org.netbeans.lib.awtextra.AbsoluteConstraints(401, 78, -1, -1));

        groupSeats.add(rd7Seats);
        rd7Seats.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        rd7Seats.setText("7 Seats");
        pnlChooseTravel.add(rd7Seats, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 78, -1, -1));

        groupSeats.add(rd4Seats);
        rd4Seats.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        rd4Seats.setText("4 Seats");
        pnlChooseTravel.add(rd4Seats, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 78, -1, -1));

        groupSeats.add(rdAll);
        rdAll.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        rdAll.setSelected(true);
        rdAll.setText("All");
        pnlChooseTravel.add(rdAll, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 78, -1, -1));

        tblViewTravelPrice.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        tblViewTravelPrice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Destination", "Limit Time", "Estimated Distance", "Number Of Seats", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblViewTravelPrice.setRowHeight(24);
        tblViewTravelPrice.getTableHeader().setReorderingAllowed(false);
        tblViewTravelPrice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblViewTravelPriceMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblViewTravelPrice);
        if (tblViewTravelPrice.getColumnModel().getColumnCount() > 0) {
            tblViewTravelPrice.getColumnModel().getColumn(0).setResizable(false);
            tblViewTravelPrice.getColumnModel().getColumn(1).setResizable(false);
            tblViewTravelPrice.getColumnModel().getColumn(2).setResizable(false);
            tblViewTravelPrice.getColumnModel().getColumn(3).setResizable(false);
            tblViewTravelPrice.getColumnModel().getColumn(4).setResizable(false);
            tblViewTravelPrice.getColumnModel().getColumn(5).setResizable(false);
        }

        pnlChooseTravel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 131, 911, 527));

        btnResetTravel.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        btnResetTravel.setLabel("Reset");
        btnResetTravel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetTravelActionPerformed(evt);
            }
        });
        pnlChooseTravel.add(btnResetTravel, new org.netbeans.lib.awtextra.AbsoluteConstraints(827, 674, 99, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 28)); // NOI18N
        jLabel2.setText("Travel Price");
        pnlChooseTravel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 670, -1, -1));

        pnlBookCar.add(pnlChooseTravel, "card1");

        pnlChooseCar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtSearchCar.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        pnlChooseCar.add(txtSearchCar, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 79, 430, -1));

        btnSearchCar.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        btnSearchCar.setText("Search");
        btnSearchCar.setActionCommand("btnSearch");
        btnSearchCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchCarActionPerformed(evt);
            }
        });
        pnlChooseCar.add(btnSearchCar, new org.netbeans.lib.awtextra.AbsoluteConstraints(472, 78, -1, -1));

        tblViewCar.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        tblViewCar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Car Name", "Number Of Seats"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblViewCar.setRowHeight(24);
        tblViewCar.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblViewCar);
        if (tblViewCar.getColumnModel().getColumnCount() > 0) {
            tblViewCar.getColumnModel().getColumn(0).setResizable(false);
            tblViewCar.getColumnModel().getColumn(1).setResizable(false);
        }

        pnlChooseCar.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 131, 911, 453));

        btnBook.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        btnBook.setText("Book");
        btnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookActionPerformed(evt);
            }
        });
        pnlChooseCar.add(btnBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 660, 99, -1));

        lblStartTime.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        lblStartTime.setText("Start Time:");
        pnlChooseCar.add(lblStartTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 610, -1, 30));

        lblDuration.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        lblDuration.setText("Duration:");
        pnlChooseCar.add(lblDuration, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 680, -1, -1));

        txtPrice.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        pnlChooseCar.add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 660, 160, 30));

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        pnlChooseCar.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 610, 99, -1));

        btnResetCar.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        btnResetCar.setText("Reset");
        btnResetCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetCarActionPerformed(evt);
            }
        });
        pnlChooseCar.add(btnResetCar, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 710, 99, -1));

        lblSeats.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        lblSeats.setText("Seats: ");
        pnlChooseCar.add(lblSeats, new org.netbeans.lib.awtextra.AbsoluteConstraints(675, 82, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        jLabel1.setText("Hour(s)");
        pnlChooseCar.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 680, -1, 30));

        spStartTime.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        spStartTime.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, null, java.util.Calendar.HOUR));
        spStartTime.setInheritsPopupMenu(true);
        pnlChooseCar.add(spStartTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 610, -1, -1));

        spDuration.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        spDuration.setModel(new javax.swing.SpinnerNumberModel());
        spDuration.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spDurationStateChanged(evt);
            }
        });
        pnlChooseCar.add(spDuration, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 680, 80, -1));

        lblPrice.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        lblPrice.setText("Price:");
        pnlChooseCar.add(lblPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 620, -1, -1));

        pnlBookCar.add(pnlChooseCar, "card2");

        pnlView.add(pnlBookCar, "card1");

        pnlTransaction.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTransaction.setFont(new java.awt.Font("Tahoma", 1, 34)); // NOI18N
        lblTransaction.setText("Transaction");
        pnlTransaction.add(lblTransaction, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 50, -1, -1));

        tblViewTransaction.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblViewTransaction.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TransID", "Destination", "Seats", "Car Serial", "Car Name", "Driver", "Start Time", "Duration", "Price", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblViewTransaction.setRowHeight(24);
        tblViewTransaction.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tblViewTransaction);

        pnlTransaction.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 130, 1170, 250));

        btnRemove.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });
        pnlTransaction.add(btnRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, 120, -1));

        pnlView.add(pnlTransaction, "card2");

        pnlProfile.setBackground(new java.awt.Color(255, 255, 255));
        pnlProfile.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlUserInfo.setBackground(new java.awt.Color(204, 255, 153));
        pnlUserInfo.setForeground(new java.awt.Color(255, 51, 51));
        pnlUserInfo.setPreferredSize(new java.awt.Dimension(51, 20));

        lblUsername.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        lblUsername.setText("Username:");

        txtUsername.setEditable(false);
        txtUsername.setBackground(new java.awt.Color(211, 211, 211));
        txtUsername.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        txtUsername.setForeground(new java.awt.Color(51, 255, 51));
        txtUsername.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        lblPass.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        lblPass.setText("Password:");

        txtPass.setEditable(false);
        txtPass.setBackground(new java.awt.Color(211, 211, 211));
        txtPass.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        txtPass.setForeground(new java.awt.Color(51, 255, 51));
        txtPass.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        lblSex.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        lblSex.setText("Sex:");

        txtAge.setEditable(false);
        txtAge.setBackground(new java.awt.Color(211, 211, 211));
        txtAge.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        txtAge.setForeground(new java.awt.Color(51, 255, 51));
        txtAge.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        lblAge.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        lblAge.setText("Age:");

        rdMale.setBackground(new java.awt.Color(204, 255, 153));
        groupSex.add(rdMale);
        rdMale.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        rdMale.setSelected(true);
        rdMale.setText("Male");
        rdMale.setEnabled(false);

        rdFemale.setBackground(new java.awt.Color(204, 255, 153));
        groupSex.add(rdFemale);
        rdFemale.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        rdFemale.setText("Female");
        rdFemale.setEnabled(false);

        lblPhone.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        lblPhone.setText("Phone Number:");

        txtPhone.setEditable(false);
        txtPhone.setBackground(new java.awt.Color(211, 211, 211));
        txtPhone.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        txtPhone.setForeground(new java.awt.Color(51, 255, 51));
        txtPhone.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        lblName.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        lblName.setText("Fullname:");

        txtName.setEditable(false);
        txtName.setBackground(new java.awt.Color(211, 211, 211));
        txtName.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        txtName.setForeground(new java.awt.Color(51, 255, 51));
        txtName.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        msgUsername.setForeground(new java.awt.Color(255, 51, 51));
        msgUsername.setPreferredSize(new java.awt.Dimension(51, 20));

        msgPass.setForeground(new java.awt.Color(255, 51, 51));

        msgName.setForeground(new java.awt.Color(255, 51, 51));

        msgAge.setForeground(new java.awt.Color(255, 51, 51));

        msgPhone.setForeground(new java.awt.Color(255, 51, 51));

        msgPass2.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout pnlUserInfoLayout = new javax.swing.GroupLayout(pnlUserInfo);
        pnlUserInfo.setLayout(pnlUserInfoLayout);
        pnlUserInfoLayout.setHorizontalGroup(
            pnlUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUserInfoLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(pnlUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlUserInfoLayout.createSequentialGroup()
                        .addGroup(pnlUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(102, 102, 102)
                        .addGroup(pnlUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(msgUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 56, Short.MAX_VALUE))
                    .addGroup(pnlUserInfoLayout.createSequentialGroup()
                        .addGroup(pnlUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblSex)
                                .addComponent(lblAge))
                            .addGroup(pnlUserInfoLayout.createSequentialGroup()
                                .addGroup(pnlUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblName)
                                    .addComponent(lblPhone))
                                .addGap(56, 56, 56)
                                .addGroup(pnlUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(msgPass2, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnlUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(pnlUserInfoLayout.createSequentialGroup()
                                            .addComponent(rdMale)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(rdFemale))
                                        .addComponent(txtPhone)
                                        .addComponent(txtAge)
                                        .addComponent(txtName)
                                        .addComponent(msgPhone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(msgName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(msgAge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(msgPass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(50, 50, 50))))
        );

        pnlUserInfoLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {msgPass, msgPass2, txtName, txtPass, txtUsername});

        pnlUserInfoLayout.setVerticalGroup(
            pnlUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUserInfoLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(pnlUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUsername))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(msgUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPass, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPass))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(msgPass, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(msgPass2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(pnlUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(msgName, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(pnlUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSex, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdMale)
                    .addComponent(rdFemale))
                .addGap(56, 56, 56)
                .addGroup(pnlUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAge))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(msgAge, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(pnlUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhone))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(msgPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlProfile.add(pnlUserInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, 680, 530));

        lblUserInfo.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        lblUserInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUserInfo.setText("User Information");
        pnlProfile.add(lblUserInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, 357, 42));

        pnlUpdate.setLayout(new java.awt.CardLayout());

        pnlBtnEdit.setBackground(new java.awt.Color(255, 255, 255));

        btnEdit.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.setToolTipText("Click Edit button to edit your profile");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBtnEditLayout = new javax.swing.GroupLayout(pnlBtnEdit);
        pnlBtnEdit.setLayout(pnlBtnEditLayout);
        pnlBtnEditLayout.setHorizontalGroup(
            pnlBtnEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBtnEditLayout.createSequentialGroup()
                .addGap(252, 252, 252)
                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(278, Short.MAX_VALUE))
        );
        pnlBtnEditLayout.setVerticalGroup(
            pnlBtnEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBtnEditLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pnlUpdate.add(pnlBtnEdit, "card1");

        pnlBtnUpdate.setBackground(new java.awt.Color(255, 255, 255));

        btnCancel.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBtnUpdateLayout = new javax.swing.GroupLayout(pnlBtnUpdate);
        pnlBtnUpdate.setLayout(pnlBtnUpdateLayout);
        pnlBtnUpdateLayout.setHorizontalGroup(
            pnlBtnUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBtnUpdateLayout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addComponent(btnCancel)
                .addGap(196, 196, 196)
                .addComponent(btnUpdate)
                .addContainerGap(148, Short.MAX_VALUE))
        );
        pnlBtnUpdateLayout.setVerticalGroup(
            pnlBtnUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBtnUpdateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBtnUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnCancel))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pnlUpdate.add(pnlBtnUpdate, "card2");

        pnlProfile.add(pnlUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 650, 680, 80));

        pnlView.add(pnlProfile, "card3");

        getContentPane().add(pnlView, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 0, 1370, 800));

        setSize(new java.awt.Dimension(1459, 857));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSignOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignOutActionPerformed
        // TODO add your handling code here:

        int dialogBtn = JOptionPane.showConfirmDialog(null, "Are you sure to sign out?", "Warning", JOptionPane.YES_NO_OPTION);
        if (dialogBtn == JOptionPane.YES_OPTION) {
            this.setVisible(false);
            new LoginForm().setVisible(true);
        }
    }//GEN-LAST:event_btnSignOutActionPerformed

    private void btnBookCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookCarActionPerformed
        // TODO add your handling code here:
        CardLayout cl1 = (CardLayout) (pnlView.getLayout());
        cl1.show(pnlView, "card1");
        CardLayout cl2 = (CardLayout) (pnlBookCar.getLayout());
        cl2.show(pnlBookCar, "card1");
        btnResetTravel.doClick();
        btnSearchTravel.doClick();
    }//GEN-LAST:event_btnBookCarActionPerformed

    private void btnTransactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransactionActionPerformed
        // TODO add your handling code here:
        CardLayout cl = (CardLayout) (pnlView.getLayout());
        cl.show(pnlView, "card2");
        loadTransaction(username);
    }//GEN-LAST:event_btnTransactionActionPerformed

    private void btnProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProfileActionPerformed
        // TODO add your handling code here:
        CardLayout cl1 = (CardLayout) (pnlView.getLayout());
        cl1.show(pnlView, "card3");
        setUnenable();
        loadUserInfo(username);
        CardLayout cl2 = (CardLayout) (pnlUpdate.getLayout());
        cl2.show(pnlUpdate, "card1");
    }//GEN-LAST:event_btnProfileActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        int dialogBtn = JOptionPane.showConfirmDialog(null, "Are you sure to exit?", "Warning", JOptionPane.YES_NO_OPTION);
        if (dialogBtn == JOptionPane.YES_OPTION) {
            System.exit(0);
        }

    }//GEN-LAST:event_btnExitActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        setEnable();
        CardLayout cl = (CardLayout) (pnlUpdate.getLayout());
        cl.show(pnlUpdate, "card2");
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        setUnenable();
        loadUserInfo(txtUsername.getText());
        CardLayout cl = (CardLayout) (pnlUpdate.getLayout());
        cl.show(pnlUpdate, "card1");
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        String accID = txtUsername.getText();
        String pass = new String(txtPass.getPassword());
        String fullname = txtName.getText();
        String phone = txtPhone.getText();
        boolean sex = rdMale.isSelected();
        int age = 0;
        try {
            age = Integer.parseInt(txtAge.getText());
        } catch (NumberFormatException e) {
        }
        CustomerDAO accDAO = new CustomerDAO();
        if (validate(pass, fullname, phone, age)) {
            if (accDAO.update(new CustomerDTO(accID, pass, fullname, phone, sex, age))) {
                JOptionPane.showMessageDialog(null, "Update success");
                setUnenable();
                CardLayout cl = (CardLayout) (pnlUpdate.getLayout());
                cl.show(pnlUpdate, "card1");
            } else {
                JOptionPane.showMessageDialog(null, "Update failed");
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSearchTravelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchTravelActionPerformed
        // TODO add your handling code here:
        TravelPriceDAO tpDAO = new TravelPriceDAO();
        List<TravelPriceDTO> result = null;
        if (rdAll.isSelected()) {
            if (txtSearchTravel.getText().equals("")) {
                result = tpDAO.findAll();
            } else {
                result = tpDAO.findByDestination(txtSearchTravel.getText());
            }
        } else if (rd4Seats.isSelected()) {
            if (txtSearchTravel.getText().equals("")) {
                result = tpDAO.findBySeats(4);
            } else {
                result = tpDAO.findByDestinationAndSeats(txtSearchTravel.getText(), 4);
            }
        } else if (rd7Seats.isSelected()) {
            if (txtSearchTravel.getText().equals("")) {
                result = tpDAO.findBySeats(7);
            } else {
                result = tpDAO.findByDestinationAndSeats(txtSearchTravel.getText(), 7);
            }
        } else {
            if (txtSearchTravel.getText().equals("")) {
                result = tpDAO.findBySeats(16);
            } else {
                result = tpDAO.findByDestinationAndSeats(txtSearchTravel.getText(), 16);
            }
        }
        if (!result.isEmpty()) {
            showTravelPrice(result);
        } else {
            JOptionPane.showMessageDialog(null, "Not found any travel");
            btnResetTravel.doClick();
        }
    }//GEN-LAST:event_btnSearchTravelActionPerformed

    private void btnResetTravelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetTravelActionPerformed
        // TODO add your handling code here:
        rdAll.setSelected(true);
        txtSearchTravel.setText("");
        tblModelTravelPrice.setRowCount(0);
    }//GEN-LAST:event_btnResetTravelActionPerformed

    private void tblViewTravelPriceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblViewTravelPriceMouseClicked
        // TODO add your handling code here:
        try {
            int row = tblViewTravelPrice.getSelectedRow();
            String travelID = (String) tblModelTravelPrice.getValueAt(row, 0);
            TravelPriceDAO tpDAO = new TravelPriceDAO();
            TravelPriceDTO tpDTO = tpDAO.findByPrimaryKey(travelID);
            if (tpDTO != null) {
                CarDAO carDAO = new CarDAO();
                List<CarDTO> result = carDAO.findAvailableDistinctBySeats(tpDTO.getNumberOfSeats());
                if (!result.isEmpty()) {
                    lblSeats.setText("Seats: " + tpDTO.getNumberOfSeats());
                    showCar(result);
                    setDefaultDuration(tpDTO.getLimitTime());
                    btnResetCar.doClick();
                    btnSearchCar.doClick();
                    CardLayout cl = (CardLayout) pnlBookCar.getLayout();
                    cl.show(pnlBookCar, "card2");
                } else {
                    JOptionPane.showMessageDialog(null, "Not found any Car for your travel!");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Not found your account", "System warning", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please select travel destination");
        }
    }//GEN-LAST:event_tblViewTravelPriceMouseClicked

    private void btnResetCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetCarActionPerformed
        // TODO add your handling code here:
        txtSearchCar.setText("");
        tblModelCar.setRowCount(0);
        SpinnerNumberModel snm = (SpinnerNumberModel) spDuration.getModel();
        snm.setValue(snm.getMinimum());
        setDefaultStartTime();
    }//GEN-LAST:event_btnResetCarActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardLayout cl = (CardLayout) pnlBookCar.getLayout();
        cl.show(pnlBookCar, "card1");
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookActionPerformed
        // TODO add your handling code here:
        boolean check = true;
        TravelTransactionDAO ttDAO = new TravelTransactionDAO();
        String transID, accID, travelID = null, carName = null, status;
        Timestamp startTime;
        int duration, price = 0;
        //Get ID transaction        
        transID = Long.toString(new Date().getTime());
        //Get accID
        accID = username;
        //Get travelID
        try {
            int rowTblTravelPrice = tblViewTravelPrice.getSelectedRow();
            if (rowTblTravelPrice == -1) {
                check = false;
            }
            travelID = (String) tblModelTravelPrice.getValueAt(rowTblTravelPrice, 0);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please select travel destination!");
        }
        //Get Car name
        try {
            int rowTblCar = tblViewCar.getSelectedRow();
            if (rowTblCar == -1) {
                check = false;
            }
            carName = (String) tblModelCar.getValueAt(rowTblCar, 0);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please select car!");
        }
        //Get start time
        Date date = (Date) spStartTime.getValue();
        startTime = new Timestamp(date.getTime());
        //Get duration
        duration = (Integer) spDuration.getValue();
        //Get price
        try {
            if (txtPrice.getText().equals("")) {
                check = false;
            }
            price = Integer.parseInt(txtPrice.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please count the price!");
        }
        //Get status
        status = "Waiting for response";
        if (check) {
            if (ttDAO.insert(new TravelTransactionDTO(transID, travelID, accID, null, null, carName, status, price, duration, startTime))) {
                JOptionPane.showMessageDialog(null, "Book car success");
                loadTransaction(accID);
                rdAll.setSelected(true);
                txtSearchTravel.setText("");
                tblModelTravelPrice.setRowCount(0);
                btnSearchTravel.doClick();
                CardLayout cl = (CardLayout) pnlBookCar.getLayout();
                cl.show(pnlBookCar, "card1");
            } else {
                JOptionPane.showMessageDialog(null, "Book car failed!");
            }
        }
    }//GEN-LAST:event_btnBookActionPerformed

    private void btnSearchCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchCarActionPerformed
        // TODO add your handling code here:
        CarDAO carDAO = new CarDAO();
        List<CarDTO> result = null;
        switch (lblSeats.getText()) {
            case "Seats: 4":
                if (txtSearchCar.getText().equals("")) {
                    result = carDAO.findAvailableDistinctBySeats(4);
                } else {
                    result = carDAO.findAvailableDistinctByCarNameAndSeats(txtSearchCar.getText(), 4);
                }
                break;
            case "Seats: 7":
                if (txtSearchCar.getText().equals("")) {
                    result = carDAO.findAvailableDistinctBySeats(7);
                } else {
                    result = carDAO.findAvailableDistinctByCarNameAndSeats(txtSearchCar.getText(), 7);
                }
                break;
            default:
                if (txtSearchCar.getText().equals("")) {
                    result = carDAO.findAvailableDistinctBySeats(16);
                } else {
                    result = carDAO.findAvailableDistinctByCarNameAndSeats(txtSearchCar.getText(), 16);
                }
                break;
        }
        if (!result.isEmpty()) {
            showCar(result);
        } else {
            JOptionPane.showMessageDialog(null, "Not Found car!");
            btnResetCar.doClick();
        }
    }//GEN-LAST:event_btnSearchCarActionPerformed

    private void spDurationStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spDurationStateChanged
        // TODO add your handling code here:
        try {
            int result;
            int row = tblViewTravelPrice.getSelectedRow();
            int duration = (Integer) spDuration.getValue();
            String travelID = (String) tblModelTravelPrice.getValueAt(row, 0);
            TravelPriceDAO tpDAO = new TravelPriceDAO();
            TravelPriceDTO tpDTO = tpDAO.findByPrimaryKey(travelID);
            CarCategoryDAO ccDAO = new CarCategoryDAO();
            CarCategoryDTO ccDTO = ccDAO.findByPrimaryKey(tpDTO.getNumberOfSeats());
            if (tblModelTransaction.getRowCount() % 2 == 0) {
                result = MyUtil.countPrice(tpDTO.getPrice(), tpDTO.getLimitTime(), duration, ccDTO.getSurchargeHr(), 0);
            } else {
                result = MyUtil.countPrice(tpDTO.getPrice(), tpDTO.getLimitTime(), duration, ccDTO.getSurchargeHr(), ccDTO.getDiscount());
            }
            txtPrice.setText(Integer.toString(result));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_spDurationStateChanged

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        try {
            int row = tblViewTransaction.getSelectedRow();
            String transID = (String) tblModelTransaction.getValueAt(row, 0);
            int dialogBtn = JOptionPane.showConfirmDialog(null, "Are you sure want to remove?", "Warning", JOptionPane.YES_NO_OPTION);
            if (dialogBtn == JOptionPane.YES_OPTION) {
                try {
                    TravelTransactionDAO ttDAO = new TravelTransactionDAO();
                    ttDAO.delete(transID);
                    JOptionPane.showMessageDialog(null, "Remove success!");
                    loadTransaction(username);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Remove failed!");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please choose transaction");
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void setDefaultDuration(int min) {
        SpinnerNumberModel snm = (SpinnerNumberModel) spDuration.getModel();
        snm.setMinimum(min);
        snm.setMaximum(120);
        snm.setValue(min);
        snm.setStepSize(1);
        ((DefaultEditor) spDuration.getEditor()).getTextField().setEditable(false);
    }

    private void setDefaultStartTime() {
        SpinnerDateModel sdm = (SpinnerDateModel) spStartTime.getModel();
        Date minDate = new Date(Calendar.getInstance().getTimeInMillis());
        Date currDate = new Date(Calendar.getInstance().getTimeInMillis() + 300000);
        sdm.setStart(minDate);
        sdm.setValue(currDate);
        ((DefaultEditor) spStartTime.getEditor()).getTextField().setEditable(false);
    }

    private void setEnable() {
        txtPass.setEditable(true);
        txtName.setEditable(true);
        rdMale.setEnabled(true);
        rdFemale.setEnabled(true);
        txtAge.setEditable(true);
        txtPhone.setEditable(true);
        txtPass.setBackground(Color.WHITE);
        txtName.setBackground(Color.WHITE);
        txtAge.setBackground(Color.WHITE);
        txtPhone.setBackground(Color.WHITE);
    }

    private void setUnenable() {
        txtPass.setEditable(false);
        txtName.setEditable(false);
        rdMale.setEnabled(false);
        rdFemale.setEnabled(false);
        txtAge.setEditable(false);
        txtPhone.setEditable(false);
        txtPass.setBackground(new Color(211, 211, 211));
        txtName.setBackground(new Color(211, 211, 211));
        txtAge.setBackground(new Color(211, 211, 211));
        txtPhone.setBackground(new Color(211, 211, 211));
    }

    private boolean validate(String pass, String fullname, String phone, int age) {
        boolean check = true;
        String passPattern = "(?=.*\\d)(?=.*[a-zA-Z])[\\w]{8,}";
        String phonePattern = "\\d{10}";
        if (!pass.matches(passPattern)) {
            msgPass.setText("Password must be 8 or more alphanumberic characters");
            msgPass2.setText("including at least 1 letter and 1 numberic letter.");
            check = false;
        } else {
            msgPass.setText("");
            msgPass2.setText("");
        }
        if (fullname.equals("")) {
            msgName.setText("Full name is not empty.");
            check = false;
        } else {
            msgName.setText("");
        }
        if (!phone.matches(phonePattern)) {
            msgPhone.setText("Phone is the sequence of 10 digits.");
            check = false;
        } else {
            msgPhone.setText("");
        }

        if (age < 1) {
            msgAge.setText("Age is a positive number");
            check = false;
        } else {
            msgAge.setText("");
        }
        return check;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBook;
    private javax.swing.JButton btnBookCar;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnProfile;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnResetCar;
    private javax.swing.JButton btnResetTravel;
    private javax.swing.JButton btnSearchCar;
    private javax.swing.JButton btnSearchTravel;
    private javax.swing.JButton btnSignOut;
    private javax.swing.JButton btnTransaction;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup groupSeats;
    private javax.swing.ButtonGroup groupSex;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblDuration;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPass;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblSeats;
    private javax.swing.JLabel lblSex;
    private javax.swing.JLabel lblStartTime;
    private javax.swing.JLabel lblTransaction;
    private javax.swing.JLabel lblUserInfo;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel msgAge;
    private javax.swing.JLabel msgName;
    private javax.swing.JLabel msgPass;
    private javax.swing.JLabel msgPass2;
    private javax.swing.JLabel msgPhone;
    private javax.swing.JLabel msgUsername;
    private javax.swing.JPanel pnlAvatar;
    private javax.swing.JPanel pnlBookCar;
    private javax.swing.JPanel pnlBtnEdit;
    private javax.swing.JPanel pnlBtnUpdate;
    private javax.swing.JPanel pnlChooseCar;
    private javax.swing.JPanel pnlChooseTravel;
    private javax.swing.JPanel pnlProfile;
    private javax.swing.JPanel pnlTransaction;
    private javax.swing.JPanel pnlUpdate;
    private javax.swing.JPanel pnlUserInfo;
    private javax.swing.JPanel pnlView;
    private javax.swing.JRadioButton rd16Seats;
    private javax.swing.JRadioButton rd4Seats;
    private javax.swing.JRadioButton rd7Seats;
    private javax.swing.JRadioButton rdAll;
    private javax.swing.JRadioButton rdFemale;
    private javax.swing.JRadioButton rdMale;
    private javax.swing.JSpinner spDuration;
    private javax.swing.JSpinner spStartTime;
    private javax.swing.JTable tblViewCar;
    private javax.swing.JTable tblViewTransaction;
    private javax.swing.JTable tblViewTravelPrice;
    private javax.swing.JToolBar toolbar;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JLabel txtPrice;
    private javax.swing.JTextField txtSearchCar;
    private javax.swing.JTextField txtSearchTravel;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
